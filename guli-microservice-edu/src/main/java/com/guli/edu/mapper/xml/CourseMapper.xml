<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guli.edu.mapper.CourseMapper">
    <select id="selectPageVo" resultType="com.guli.edu.vo.CourseTeacherVo" parameterType="com.guli.edu.query.CourseQuery">
    select
    edu_teacher.name,edu_course.*
    from edu_course
    LEFT JOIN edu_teacher
    on
    edu_course.teacher_id=edu_teacher.id

   <where>

       <if test="courseQuery.teacherId != null and courseQuery.teacherId !=''">
           edu_course.teacher_id = #{courseQuery.teacherId}
       </if>
       <if test="courseQuery.title != null and courseQuery.title !=''">
           AND edu_course.title like CONCAT('%', #{courseQuery.title}, '%')
       </if>
       <if test="courseQuery.subjectParentId != null and courseQuery.subjectParentId !=''">
           AND edu_course.subject_parent_id = #{courseQuery.subjectParentId}
       </if>
   </where>

        ORDER BY gmt_create DESC

    </select>
    <select id="selectCoursePublishVoById" resultType="com.guli.edu.vo.CoursePublishVo">
      SELECT
        c.title,
        c.cover,
        c.lesson_num AS lessonNum,
        CONVERT(c.price, DECIMAL(8,2)) AS price,
        s1.title AS subjectLevelOne,
        s2.title AS subjectLevelTwo,
        t.name AS teacherName
         FROM
        edu_course c
        LEFT JOIN edu_teacher t ON c.teacher_id = t.id
        LEFT JOIN edu_subject s1 ON c.subject_parent_id = s1.id
        LEFT JOIN edu_subject s2 ON c.subject_id = s2.id
    WHERE
        c.id = #{id}
    </select>
    <select id="selectCourseWebVoById" resultType="com.guli.edu.vo.CourseWebVo">
  SELECT
    c.id,
    c.title,
    c.cover,
    CONVERT(c.price, DECIMAL(8,2)) AS price,
    c.lesson_num AS lessonNum,
    c.cover,
    c.buy_count AS buyCount,
    c.view_count AS viewCount,
    cd.description,

    t.id AS teacherId,
    t.name AS teacherName,
    t.intro,
    t.avatar,

    s1.id AS subjectLevelOneId,
    s1.title AS subjectLevelOne,
    s2.id AS subjectLevelTwoId,
    s2.title AS subjectLevelTwo

  FROM
    edu_course c
    LEFT JOIN edu_course_description cd ON c.id = cd.id
    LEFT JOIN edu_teacher t ON c.teacher_id = t.id
    LEFT JOIN edu_subject s1 ON c.subject_parent_id = s1.id
    LEFT JOIN edu_subject s2 ON c.subject_id = s2.id
  WHERE
    c.id = #{id}
</select>
</mapper>
